// app/api/webhooks/polar/route.ts
import { NextRequest, NextResponse } from "next/server";

export async function POST(request: NextRequest) {
  try {
    // R√©cup√©rer le body en JSON
    const event = await request.json();

    // Log simple pour voir que √ßa marche
    console.log("üéØ Webhook Polar re√ßu!", {
      type: event.type,
      id: event.id || "no-id",
      timestamp: new Date().toISOString(),
    });

    // Afficher les donn√©es re√ßues
    console.log("üì¶ Donn√©es:", JSON.stringify(event, null, 2));

    // R√©ponse simple
    return NextResponse.json(
      {
        message: "Webhook re√ßu avec succ√®s!",
        eventType: event.type,
        received: true,
      },
      { status: 200 }
    );
  } catch (error) {
    console.error("‚ùå Erreur webhook:", error);

    return NextResponse.json(
      { error: "Erreur lors du traitement" },
      { status: 500 }
    );
  }
}

// Route GET pour tester que l'endpoint existe
export async function GET() {
  return NextResponse.json({
    message: "Endpoint webhook Polar actif ‚úÖ",
    timestamp: new Date().toISOString(),
  });
}
